<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="adapterUsers.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 54</value>
  </data>
  <assembly alias="mscorlib" name="mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="sqlDeleteCommand1.DesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlDeleteCommand1.CommandDesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlDeleteCommand1.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="sqlConnection.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 91</value>
  </data>
  <data name="sqlInsertCommand1.DesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlInsertCommand1.CommandDesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlInsertCommand1.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="sqlSelectCommand6.DesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlSelectCommand6.CommandDesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlSelectCommand6.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="sqlUpdateCommand1.DesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlUpdateCommand1.CommandDesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlUpdateCommand1.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="sqlUpdateCommand1.CommandText" xml:space="preserve">
    <value>UPDATE Users SET Login = @Login, Password = @Password, Name = @Name WHERE (Id = @Original_Id) AND (Login = @Original_Login) AND (Name = @Original_Name) AND (Password = @Original_Password); SELECT Id, Login, Password, Name FROM Users WHERE (Id = @Id)</value>
  </data>
  <data name="adapterTests.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 165</value>
  </data>
  <data name="sqlDeleteCommand2.DesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlDeleteCommand2.CommandDesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlDeleteCommand2.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="sqlInsertCommand2.DesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlInsertCommand2.CommandDesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlInsertCommand2.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="sqlSelectAll.DesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlSelectAll.CommandDesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlSelectAll.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="sqlUpdateCommand2.DesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlUpdateCommand2.CommandDesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlUpdateCommand2.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="adapterQuestionById.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 202</value>
  </data>
  <data name="sqlDeleteCommand3.DesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlDeleteCommand3.CommandDesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlDeleteCommand3.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="sqlInsertCommand3.DesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlInsertCommand3.CommandDesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlInsertCommand3.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="sqlInsertCommand3.CommandText" xml:space="preserve">
    <value>INSERT INTO Questions(TypeId, SubtypeId, DifficultyLevelId, Text, Picture) VALUES (@TypeId, @SubtypeId, @DifficultyLevelId, @Text, @Picture); SELECT Id, TypeId, SubtypeId, DifficultyLevelId, Text, Picture FROM Questions WHERE (Id = @@IDENTITY)</value>
  </data>
  <data name="sqlSelectCommand3.DesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlSelectCommand3.CommandDesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlSelectCommand3.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="sqlUpdateCommand3.DesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlUpdateCommand3.CommandDesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlUpdateCommand3.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="sqlUpdateCommand3.CommandText" xml:space="preserve">
    <value>UPDATE Questions SET TypeId = @TypeId, SubtypeId = @SubtypeId, DifficultyLevelId = @DifficultyLevelId, Text = @Text, Picture = @Picture WHERE (Id = @Original_Id); SELECT Id, TypeId, SubtypeId, DifficultyLevelId, Text, Picture FROM Questions WHERE (Id = @Id)</value>
  </data>
  <data name="adapterAnswersByQuestionId.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 313</value>
  </data>
  <data name="sqlDeleteCommand4.DesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlDeleteCommand4.CommandDesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlDeleteCommand4.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="sqlInsertCommand4.DesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlInsertCommand4.CommandDesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlInsertCommand4.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>0, 0</value>
  </data>
  <data name="sqlInsertCommand4.CommandText" xml:space="preserve">
    <value>INSERT INTO Answers(QuestionId, Text, IsCorrect, [Order]) VALUES (@QuestionId, @Text, @IsCorrect, @Param1); SELECT QuestionId, Text, IsCorrect, [Order] FROM Answers WHERE (QuestionId = @QuestionId) AND (Text = @Text)</value>
  </data>
  <data name="sqlSelectAnswersByQestionId.DesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlSelectAnswersByQestionId.CommandDesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlSelectAnswersByQestionId.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="sqlUpdateCommand4.DesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlUpdateCommand4.CommandDesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlUpdateCommand4.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="sqlUpdateCommand4.CommandText" xml:space="preserve">
    <value>UPDATE Answers SET QuestionId = @QuestionId, Text = @Text, IsCorrect = @IsCorrect, [Order] = @Param2 WHERE (QuestionId = @Original_QuestionId) AND (Text = @Original_Text); SELECT QuestionId, Text, IsCorrect, [Order] FROM Answers WHERE (QuestionId = @QuestionId) AND (Text = @Text)</value>
  </data>
  <data name="adapterUserById.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 387</value>
  </data>
  <data name="sqlDeleteCommand5.DesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlDeleteCommand5.CommandDesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlDeleteCommand5.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="sqlInsertCommand5.DesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlInsertCommand5.CommandDesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlInsertCommand5.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>0, 0</value>
  </data>
  <data name="sqlSelectUserById.DesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlSelectUserById.CommandDesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlSelectUserById.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="sqlUpdateCommand5.DesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlUpdateCommand5.CommandDesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlUpdateCommand5.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>0, 0</value>
  </data>
  <data name="adapterQuestionsByQuestionSetId.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 461</value>
  </data>
  <data name="sqlDeleteCommand8.DesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlDeleteCommand8.CommandDesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlDeleteCommand8.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="sqlInsertCommand8.DesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlInsertCommand8.CommandDesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlInsertCommand8.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="sqlSelectCommand2.DesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlSelectCommand2.CommandDesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlSelectCommand2.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="sqlSelectCommand2.CommandText" xml:space="preserve">
    <value>SELECT Questions.Id, Questions.TypeId, Questions.SubtypeId, Questions.DifficultyLevelId, Questions.Text, Questions.Picture FROM SetsToQuestions INNER JOIN Questions ON SetsToQuestions.QuestionId = Questions.Id WHERE (SetsToQuestions.SetId = @QuestionSetId)</value>
  </data>
  <data name="sqlUpdateCommand8.DesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlUpdateCommand8.CommandDesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlUpdateCommand8.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="adapterAnswersByQuestionSetId.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 498</value>
  </data>
  <data name="sqlSelectAnswersByQuestionSetId.DesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlSelectAnswersByQuestionSetId.CommandDesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlSelectAnswersByQuestionSetId.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>0, 0</value>
  </data>
  <data name="sqlSelectAnswersByQuestionSetId.CommandText" xml:space="preserve">
    <value>SELECT Answers.* FROM Answers INNER JOIN Questions ON Answers.QuestionId = Questions.Id INNER JOIN SetsToQuestions ON Questions.Id = SetsToQuestions.QuestionId WHERE (SetsToQuestions.SetId = @QuestionSetId)</value>
  </data>
  <data name="adapterResultsByUserIdTimeRange.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 535</value>
  </data>
  <data name="sqlSelectResultsByUserIdTimeRange.DesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlSelectResultsByUserIdTimeRange.CommandDesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlSelectResultsByUserIdTimeRange.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="sqlSelectResultsByUserIdTimeRange.CommandText" xml:space="preserve">
    <value>SELECT Results.Id, Results.UserId, Results.StartTime, Results.EndTime, Results.Score, Tests.Name AS TestName, Tests.IsPractice AS TestIsPractice, Tests.Id AS TestId FROM Results INNER JOIN Tests ON Results.TestId = Tests.Id WHERE (Results.UserId = @UserId) AND (Results.StartTime BETWEEN @Time1 AND @Time2)</value>
  </data>
  <data name="adapterResultsDetailsByResultId.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 572</value>
  </data>
  <data name="sqlDeleteCommand7.DesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlDeleteCommand7.CommandDesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlDeleteCommand7.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="sqlDeleteCommand7.CommandText" xml:space="preserve">
    <value>DELETE FROM ResultsDetails WHERE (QuestionId = @Original_QuestionId) AND (ResultId = @Original_ResultId) AND (AnswerId = @Original_AnswerId OR @Original_AnswerId IS NULL AND AnswerId IS NULL) AND (QuestionOrder = @Original_QuestionOrder)</value>
  </data>
  <data name="sqlInsertCommand7.DesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlInsertCommand7.CommandDesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlInsertCommand7.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="sqlInsertCommand7.CommandText" xml:space="preserve">
    <value>INSERT INTO ResultsDetails(ResultId, QuestionId, AnswerId, QuestionOrder,StartTime,EndTime) VALUES (@ResultId, @QuestionId, @AnswerId, @QuestionOrder,@StartTime,@EndTime); SELECT ResultId, QuestionId, AnswerId, QuestionOrder FROM ResultsDetails WHERE (QuestionId = @QuestionId) AND (ResultId = @ResultId)</value>
  </data>
  <data name="sqlSelectCommand1.DesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlSelectCommand1.CommandDesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlSelectCommand1.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>0, 0</value>
  </data>
  <data name="sqlUpdateCommand7.DesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlUpdateCommand7.CommandDesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlUpdateCommand7.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="sqlUpdateCommand7.CommandText" xml:space="preserve">
    <value>UPDATE ResultsDetails SET ResultId = @ResultId, QuestionId = @QuestionId, AnswerId = @AnswerId, QuestionOrder = @QuestionOrder WHERE (QuestionId = @Original_QuestionId) AND (ResultId = @Original_ResultId) AND (AnswerId = @Original_AnswerId OR @Original_AnswerId IS NULL AND AnswerId IS NULL) AND (QuestionOrder = @Original_QuestionOrder); SELECT ResultId, QuestionId, AnswerId, QuestionOrder FROM ResultsDetails WHERE (QuestionId = @QuestionId) AND (ResultId = @ResultId)</value>
  </data>
  <data name="adapterQuestionSetsByTestId.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 646</value>
  </data>
  <data name="sqlDeleteCommand9.DesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlDeleteCommand9.CommandDesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlDeleteCommand9.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="sqlInsertCommand9.DesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlInsertCommand9.CommandDesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlInsertCommand9.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="sqlInsertCommand9.CommandText" xml:space="preserve">
    <value>INSERT INTO QuestionSets(Name, Description, NumberOfQuestionsToPick, TimeLimit, QuestionTypeId, QuestionSubtypeId, NumberOfQuestionsInZone2, NumberOfQuestionsInZone1, NumberOfQuestionsInZone3) VALUES (@Name, @Description, @NumberOfQuestionsToPick, @TimeLimit, @QuestionTypeId, @QuestionSubtypeId, @NumberOfQuestionsInZone2, @NumberOfQuestionsInZone1, @NumberOfQuestionsInZone3)</value>
  </data>
  <data name="sqlSelectCommand4.DesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlSelectCommand4.CommandDesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlSelectCommand4.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="sqlSelectCommand4.CommandText" xml:space="preserve">
    <value>SELECT QuestionSets.Id, QuestionSets.Name, QuestionSets.Description, QuestionSets.NumberOfQuestionsToPick, QuestionSets.TimeLimit, QuestionSets.QuestionTypeId, QuestionSets.QuestionSubtypeId, QuestionSets.NumberOfQuestionsInZone2, QuestionSets.NumberOfQuestionsInZone1, QuestionSets.NumberOfQuestionsInZone3 FROM QuestionSets INNER JOIN TestContents ON QuestionSets.Id = TestContents.QuestionSetId INNER JOIN Tests ON TestContents.TestId = Tests.Id WHERE (Tests.Id = @testId) ORDER BY TestContents.QuestionSetOrder</value>
  </data>
  <data name="sqlUpdateCommand9.DesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlUpdateCommand9.CommandDesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlUpdateCommand9.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="sqlUpdateCommand9.CommandText" xml:space="preserve">
    <value>UPDATE QuestionSets SET Name = @Name, Description = @Description, NumberOfQuestionsToPick = @NumberOfQuestionsToPick, TimeLimit = @TimeLimit, QuestionTypeId = @QuestionTypeId, QuestionSubtypeId = @QuestionSubtypeId, NumberOfQuestionsInZone2 = @NumberOfQuestionsInZone2, NumberOfQuestionsInZone1 = @NumberOfQuestionsInZone1, NumberOfQuestionsInZone3 = @NumberOfQuestionsInZone3 WHERE (Id = @Original_Id)</value>
  </data>
  <data name="adapterResultsByResultId.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 276</value>
  </data>
  <data name="sqlDeleteCommand6.DesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlDeleteCommand6.CommandDesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlDeleteCommand6.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>0, 0</value>
  </data>
  <data name="sqlDeleteCommand6.CommandText" xml:space="preserve">
    <value>DELETE FROM Results WHERE (Id = @Original_Id) AND (EndTime = @Original_EndTime) AND (Score = @Original_Score) AND (StartTime = @Original_StartTime) AND (TestId = @Original_TestId) AND (UserId = @Original_UserId)</value>
  </data>
  <data name="sqlInsertCommand6.DesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlInsertCommand6.CommandDesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlInsertCommand6.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="sqlInsertCommand6.CommandText" xml:space="preserve">
    <value>INSERT INTO Results(UserId, TestId, StartTime, EndTime, Score) VALUES (@UserId, @TestId, @StartTime, @EndTime, @Score); SELECT Id, UserId, TestId, StartTime, EndTime, Score FROM Results WHERE (Id = @@IDENTITY)</value>
  </data>
  <data name="sqlSelectCommand8.DesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlSelectCommand8.CommandDesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlSelectCommand8.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="sqlUpdateCommand6.DesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlUpdateCommand6.CommandDesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlUpdateCommand6.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="sqlUpdateCommand6.CommandText" xml:space="preserve">
    <value>UPDATE Results SET UserId = @UserId, TestId = @TestId, StartTime = @StartTime, EndTime = @EndTime, Score = @Score WHERE (Id = @Original_Id) AND (EndTime = @Original_EndTime) AND (Score = @Original_Score) AND (StartTime = @Original_StartTime) AND (TestId = @Original_TestId) AND (UserId = @Original_UserId); SELECT Id, UserId, TestId, StartTime, EndTime, Score FROM Results WHERE (Id = @Id)</value>
  </data>
  <data name="adapterResultDetailsByResultId.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 683</value>
  </data>
  <data name="sqlSelectCommand7.DesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlSelectCommand7.CommandDesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlSelectCommand7.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="sqlSelectCommand7.CommandText" xml:space="preserve">
    <value>SELECT Answers.IsCorrect, ResultsDetails.QuestionId, ResultsDetails.QuestionOrder, Questions.Text AS QuestionText, DifficultyLevel.Name AS QuestionDifficultyLevel, SetsToQuestions.SetId, Answers.Id FROM Answers INNER JOIN Questions ON Answers.QuestionId = Questions.Id INNER JOIN ResultsDetails ON Answers.Id = ResultsDetails.AnswerId AND Questions.Id = ResultsDetails.QuestionId INNER JOIN DifficultyLevel ON Questions.DifficultyLevelId = DifficultyLevel.Id INNER JOIN SetsToQuestions ON Questions.Id = SetsToQuestions.QuestionId INNER JOIN ResultsDetailsOfSets ON ResultsDetails.ResultId = ResultsDetailsOfSets.ResultId AND SetsToQuestions.SetId = ResultsDetailsOfSets.QuestionSetId WHERE (ResultsDetails.ResultId = @ResultId) ORDER BY ResultsDetails.QuestionOrder</value>
  </data>
  <data name="adapterPassagesToQuestionsByQuestionId.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 609</value>
  </data>
  <data name="sqlSelectPassagesToQuestionsByQuestionId.DesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlSelectPassagesToQuestionsByQuestionId.CommandDesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlSelectPassagesToQuestionsByQuestionId.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="sqlSelectPassagesToQuestionsByQuestionId.CommandText" xml:space="preserve">
    <value>SELECT PassagesToQuestions.PassageQuestionId, PassagesToQuestions.QuestionId FROM PassagesToQuestions INNER JOIN PassagesToQuestions PassagesToQuestions_1 ON PassagesToQuestions.PassageQuestionId = PassagesToQuestions_1.PassageQuestionId WHERE (PassagesToQuestions_1.QuestionId = @Id)</value>
  </data>
  <data name="adapterQuestionsByQuestionSetIdAndZone.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 350</value>
  </data>
  <data name="sqlSelectCommand5.DesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlSelectCommand5.CommandDesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlSelectCommand5.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="sqlSelectCommand5.CommandText" xml:space="preserve">
    <value>SELECT Questions.Id, Questions.TypeId, Questions.SubtypeId, Questions.DifficultyLevelId, Questions.Text, Questions.Picture FROM SetsToQuestions INNER JOIN Questions ON SetsToQuestions.QuestionId = Questions.Id WHERE (SetsToQuestions.SetId = @QuestionSetId) AND (SetsToQuestions.QuestionZone = @QuestionZone)</value>
  </data>
  <data name="adapterAnswersByQuestionSetIdAndZone.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 424</value>
  </data>
  <data name="sqlCommand1.DesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlCommand1.CommandDesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlCommand1.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="sqlCommand1.CommandText" xml:space="preserve">
    <value>SELECT Answers.* FROM Answers INNER JOIN Questions ON Answers.QuestionId = Questions.Id INNER JOIN SetsToQuestions ON Questions.Id = SetsToQuestions.QuestionId WHERE (SetsToQuestions.SetId = @QuestionSetId) AND (SetsToQuestions.QuestionZone = @QuestionZone)</value>
  </data>
  <data name="adapterResultsDetailsOfSetsByResultId.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 128</value>
  </data>
  <data name="sqlDeleteCommand10.DesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlDeleteCommand10.CommandDesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlDeleteCommand10.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="sqlInsertCommand10.DesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlInsertCommand10.CommandDesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlInsertCommand10.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="sqlInsertCommand10.CommandText" xml:space="preserve">
    <value>INSERT INTO ResultsDetailsOfSets(ResultId, QuestionSetId, Score, QuestionSetOrder) VALUES (@ResultId, @QuestionSetId, @Score, @QuestionSetOrder); SELECT ResultId, QuestionSetId, Score, QuestionSetOrder FROM ResultsDetailsOfSets WHERE (QuestionSetId = @QuestionSetId) AND (ResultId = @ResultId)</value>
  </data>
  <data name="sqlSelectCommand9.DesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlSelectCommand9.CommandDesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlSelectCommand9.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="sqlUpdateCommand10.DesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlUpdateCommand10.CommandDesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlUpdateCommand10.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="sqlUpdateCommand10.CommandText" xml:space="preserve">
    <value>UPDATE ResultsDetailsOfSets SET ResultId = @ResultId, QuestionSetId = @QuestionSetId, Score = @Score, QuestionSetOrder = @QuestionSetOrder WHERE (QuestionSetId = @Original_QuestionSetId) AND (ResultId = @Original_ResultId); SELECT ResultId, QuestionSetId, Score, QuestionSetOrder FROM ResultsDetailsOfSets WHERE (QuestionSetId = @QuestionSetId) AND (ResultId = @ResultId)</value>
  </data>
  <data name="adapterQuestionSetsExByResultId.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 239</value>
  </data>
  <data name="sqlSelectCommand10.DesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlSelectCommand10.CommandDesignTimeVisible" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
  <data name="sqlSelectCommand10.TrayLocation" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="sqlSelectCommand10.CommandText" xml:space="preserve">
    <value>SELECT ResultsDetailsOfSets.Score, QuestionSets.Id, QuestionSets.Name, QuestionSets.Description, QuestionSets.NumberOfQuestionsToPick, QuestionSets.TimeLimit, QuestionSets.QuestionTypeId, QuestionSets.QuestionSubtypeId, QuestionSets.NumberOfQuestionsInZone1, QuestionSets.NumberOfQuestionsInZone2, QuestionSets.NumberOfQuestionsInZone3 FROM QuestionSets INNER JOIN ResultsDetailsOfSets ON QuestionSets.Id = ResultsDetailsOfSets.QuestionSetId WHERE (ResultsDetailsOfSets.ResultId = @ResultId)</value>
  </data>
  <data name="$this.TrayLargeIcon" type="System.Boolean, mscorlib">
    <value>False</value>
  </data>
</root>