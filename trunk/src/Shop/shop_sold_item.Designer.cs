//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Shop {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("shop_sold_item")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class shop_sold_item : System.Data.DataSet {
        
        private shop_sold_itemDataTable tableshop_sold_item;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public shop_sold_item() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected shop_sold_item(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["shop_sold_item"] != null)) {
                    base.Tables.Add(new shop_sold_itemDataTable(ds.Tables["shop_sold_item"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public shop_sold_itemDataTable _shop_sold_item {
            get {
                return this.tableshop_sold_item;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            shop_sold_item cln = ((shop_sold_item)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["shop_sold_item"] != null)) {
                    base.Tables.Add(new shop_sold_itemDataTable(ds.Tables["shop_sold_item"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableshop_sold_item = ((shop_sold_itemDataTable)(base.Tables["shop_sold_item"]));
            if ((initTable == true)) {
                if ((this.tableshop_sold_item != null)) {
                    this.tableshop_sold_item.InitVars();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "shop_sold_item";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/shop_sold_item.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableshop_sold_item = new shop_sold_itemDataTable();
            base.Tables.Add(this.tableshop_sold_item);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerialize_shop_sold_item() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            shop_sold_item ds = new shop_sold_item();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void shop_sold_itemRowChangeEventHandler(object sender, shop_sold_itemRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class shop_sold_itemDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnidx;
            
            private System.Data.DataColumn columnitem_type_idx;
            
            private System.Data.DataColumn columnsold_at;
            
            private System.Data.DataColumn columnexpires_at;
            
            private System.Data.DataColumn columnuse_count;
            
            private System.Data.DataColumn columnsold_count;
            
            private System.Data.DataColumn columnowner;
            
            private System.Data.DataColumn columntype;
            
            private System.Data.DataColumn columnparent;
            
            private System.Data.DataColumn columnname;
            
            private System.Data.DataColumn columnparent_pkg_idx;
            
            private System.Data.DataColumn columnpayed;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public shop_sold_itemDataTable() {
                this.TableName = "shop_sold_item";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal shop_sold_itemDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected shop_sold_itemDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn idxColumn {
                get {
                    return this.columnidx;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn item_type_idxColumn {
                get {
                    return this.columnitem_type_idx;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn sold_atColumn {
                get {
                    return this.columnsold_at;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn expires_atColumn {
                get {
                    return this.columnexpires_at;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn use_countColumn {
                get {
                    return this.columnuse_count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn sold_countColumn {
                get {
                    return this.columnsold_count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ownerColumn {
                get {
                    return this.columnowner;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn typeColumn {
                get {
                    return this.columntype;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn parentColumn {
                get {
                    return this.columnparent;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn parent_pkg_idxColumn {
                get {
                    return this.columnparent_pkg_idx;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn payedColumn {
                get {
                    return this.columnpayed;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public shop_sold_itemRow this[int index] {
                get {
                    return ((shop_sold_itemRow)(this.Rows[index]));
                }
            }
            
            public event shop_sold_itemRowChangeEventHandler shop_sold_itemRowChanging;
            
            public event shop_sold_itemRowChangeEventHandler shop_sold_itemRowChanged;
            
            public event shop_sold_itemRowChangeEventHandler shop_sold_itemRowDeleting;
            
            public event shop_sold_itemRowChangeEventHandler shop_sold_itemRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addshop_sold_itemRow(shop_sold_itemRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public shop_sold_itemRow Addshop_sold_itemRow(int item_type_idx, System.DateTime sold_at, System.DateTime expires_at, int use_count, int sold_count, System.Guid owner, int type, int parent, string name, int parent_pkg_idx, decimal payed) {
                shop_sold_itemRow rowshop_sold_itemRow = ((shop_sold_itemRow)(this.NewRow()));
                rowshop_sold_itemRow.ItemArray = new object[] {
                        null,
                        item_type_idx,
                        sold_at,
                        expires_at,
                        use_count,
                        sold_count,
                        owner,
                        type,
                        parent,
                        name,
                        parent_pkg_idx,
                        payed};
                this.Rows.Add(rowshop_sold_itemRow);
                return rowshop_sold_itemRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public shop_sold_itemRow FindByidx(int idx) {
                return ((shop_sold_itemRow)(this.Rows.Find(new object[] {
                            idx})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                shop_sold_itemDataTable cln = ((shop_sold_itemDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new shop_sold_itemDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnidx = base.Columns["idx"];
                this.columnitem_type_idx = base.Columns["item_type_idx"];
                this.columnsold_at = base.Columns["sold_at"];
                this.columnexpires_at = base.Columns["expires_at"];
                this.columnuse_count = base.Columns["use_count"];
                this.columnsold_count = base.Columns["sold_count"];
                this.columnowner = base.Columns["owner"];
                this.columntype = base.Columns["type"];
                this.columnparent = base.Columns["parent"];
                this.columnname = base.Columns["name"];
                this.columnparent_pkg_idx = base.Columns["parent_pkg_idx"];
                this.columnpayed = base.Columns["payed"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnidx = new System.Data.DataColumn("idx", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnidx);
                this.columnitem_type_idx = new System.Data.DataColumn("item_type_idx", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnitem_type_idx);
                this.columnsold_at = new System.Data.DataColumn("sold_at", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnsold_at);
                this.columnexpires_at = new System.Data.DataColumn("expires_at", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnexpires_at);
                this.columnuse_count = new System.Data.DataColumn("use_count", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnuse_count);
                this.columnsold_count = new System.Data.DataColumn("sold_count", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnsold_count);
                this.columnowner = new System.Data.DataColumn("owner", typeof(System.Guid), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnowner);
                this.columntype = new System.Data.DataColumn("type", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columntype);
                this.columnparent = new System.Data.DataColumn("parent", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnparent);
                this.columnname = new System.Data.DataColumn("name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columnparent_pkg_idx = new System.Data.DataColumn("parent_pkg_idx", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnparent_pkg_idx);
                this.columnpayed = new System.Data.DataColumn("payed", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnpayed);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnidx}, true));
                this.columnidx.AutoIncrement = true;
                this.columnidx.AllowDBNull = false;
                this.columnidx.ReadOnly = true;
                this.columnidx.Unique = true;
                this.columnitem_type_idx.AllowDBNull = false;
                this.columnsold_at.AllowDBNull = false;
                this.columnexpires_at.AllowDBNull = false;
                this.columnname.MaxLength = 256;
                this.ExtendedProperties.Add("Generator_TablePropName", "_shop_sold_item");
                this.ExtendedProperties.Add("Generator_UserTableName", "shop_sold_item");
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public shop_sold_itemRow Newshop_sold_itemRow() {
                return ((shop_sold_itemRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new shop_sold_itemRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(shop_sold_itemRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.shop_sold_itemRowChanged != null)) {
                    this.shop_sold_itemRowChanged(this, new shop_sold_itemRowChangeEvent(((shop_sold_itemRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.shop_sold_itemRowChanging != null)) {
                    this.shop_sold_itemRowChanging(this, new shop_sold_itemRowChangeEvent(((shop_sold_itemRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.shop_sold_itemRowDeleted != null)) {
                    this.shop_sold_itemRowDeleted(this, new shop_sold_itemRowChangeEvent(((shop_sold_itemRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.shop_sold_itemRowDeleting != null)) {
                    this.shop_sold_itemRowDeleting(this, new shop_sold_itemRowChangeEvent(((shop_sold_itemRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removeshop_sold_itemRow(shop_sold_itemRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                shop_sold_item ds = new shop_sold_item();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "shop_sold_itemDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class shop_sold_itemRow : System.Data.DataRow {
            
            private shop_sold_itemDataTable tableshop_sold_item;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal shop_sold_itemRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableshop_sold_item = ((shop_sold_itemDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int idx {
                get {
                    return ((int)(this[this.tableshop_sold_item.idxColumn]));
                }
                set {
                    this[this.tableshop_sold_item.idxColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int item_type_idx {
                get {
                    return ((int)(this[this.tableshop_sold_item.item_type_idxColumn]));
                }
                set {
                    this[this.tableshop_sold_item.item_type_idxColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime sold_at {
                get {
                    return ((System.DateTime)(this[this.tableshop_sold_item.sold_atColumn]));
                }
                set {
                    this[this.tableshop_sold_item.sold_atColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime expires_at {
                get {
                    return ((System.DateTime)(this[this.tableshop_sold_item.expires_atColumn]));
                }
                set {
                    this[this.tableshop_sold_item.expires_atColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int use_count {
                get {
                    try {
                        return ((int)(this[this.tableshop_sold_item.use_countColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'use_count\' in table \'shop_sold_item\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableshop_sold_item.use_countColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int sold_count {
                get {
                    try {
                        return ((int)(this[this.tableshop_sold_item.sold_countColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'sold_count\' in table \'shop_sold_item\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableshop_sold_item.sold_countColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Guid owner {
                get {
                    try {
                        return ((System.Guid)(this[this.tableshop_sold_item.ownerColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'owner\' in table \'shop_sold_item\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableshop_sold_item.ownerColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int type {
                get {
                    try {
                        return ((int)(this[this.tableshop_sold_item.typeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'type\' in table \'shop_sold_item\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableshop_sold_item.typeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int parent {
                get {
                    try {
                        return ((int)(this[this.tableshop_sold_item.parentColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'parent\' in table \'shop_sold_item\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableshop_sold_item.parentColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name {
                get {
                    try {
                        return ((string)(this[this.tableshop_sold_item.nameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'name\' in table \'shop_sold_item\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableshop_sold_item.nameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int parent_pkg_idx {
                get {
                    try {
                        return ((int)(this[this.tableshop_sold_item.parent_pkg_idxColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'parent_pkg_idx\' in table \'shop_sold_item\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableshop_sold_item.parent_pkg_idxColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal payed {
                get {
                    try {
                        return ((decimal)(this[this.tableshop_sold_item.payedColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'payed\' in table \'shop_sold_item\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableshop_sold_item.payedColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isuse_countNull() {
                return this.IsNull(this.tableshop_sold_item.use_countColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setuse_countNull() {
                this[this.tableshop_sold_item.use_countColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Issold_countNull() {
                return this.IsNull(this.tableshop_sold_item.sold_countColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setsold_countNull() {
                this[this.tableshop_sold_item.sold_countColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsownerNull() {
                return this.IsNull(this.tableshop_sold_item.ownerColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetownerNull() {
                this[this.tableshop_sold_item.ownerColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IstypeNull() {
                return this.IsNull(this.tableshop_sold_item.typeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SettypeNull() {
                this[this.tableshop_sold_item.typeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsparentNull() {
                return this.IsNull(this.tableshop_sold_item.parentColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetparentNull() {
                this[this.tableshop_sold_item.parentColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnameNull() {
                return this.IsNull(this.tableshop_sold_item.nameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnameNull() {
                this[this.tableshop_sold_item.nameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Isparent_pkg_idxNull() {
                return this.IsNull(this.tableshop_sold_item.parent_pkg_idxColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Setparent_pkg_idxNull() {
                this[this.tableshop_sold_item.parent_pkg_idxColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IspayedNull() {
                return this.IsNull(this.tableshop_sold_item.payedColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetpayedNull() {
                this[this.tableshop_sold_item.payedColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class shop_sold_itemRowChangeEvent : System.EventArgs {
            
            private shop_sold_itemRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public shop_sold_itemRowChangeEvent(shop_sold_itemRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public shop_sold_itemRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Shop.shop_sold_itemTableAdapters {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class shop_sold_itemTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public shop_sold_itemTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "shop_sold_item";
            tableMapping.ColumnMappings.Add("idx", "idx");
            tableMapping.ColumnMappings.Add("item_type_idx", "item_type_idx");
            tableMapping.ColumnMappings.Add("sold_at", "sold_at");
            tableMapping.ColumnMappings.Add("expires_at", "expires_at");
            tableMapping.ColumnMappings.Add("use_count", "use_count");
            tableMapping.ColumnMappings.Add("sold_count", "sold_count");
            tableMapping.ColumnMappings.Add("owner", "owner");
            tableMapping.ColumnMappings.Add("type", "type");
            tableMapping.ColumnMappings.Add("parent", "parent");
            tableMapping.ColumnMappings.Add("name", "name");
            tableMapping.ColumnMappings.Add("parent_pkg_idx", "parent_pkg_idx");
            tableMapping.ColumnMappings.Add("payed", "payed");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [shop_sold_item] WHERE (([idx] = @Original_idx) AND ([item_type_idx] = @Original_item_type_idx) AND ([sold_at] = @Original_sold_at) AND ([expires_at] = @Original_expires_at) AND ((@IsNull_use_count = 1 AND [use_count] IS NULL) OR ([use_count] = @Original_use_count)) AND ((@IsNull_sold_count = 1 AND [sold_count] IS NULL) OR ([sold_count] = @Original_sold_count)) AND ((@IsNull_owner = 1 AND [owner] IS NULL) OR ([owner] = @Original_owner)) AND ((@IsNull_type = 1 AND [type] IS NULL) OR ([type] = @Original_type)) AND ((@IsNull_parent = 1 AND [parent] IS NULL) OR ([parent] = @Original_parent)) AND ((@IsNull_name = 1 AND [name] IS NULL) OR ([name] = @Original_name)) AND ((@IsNull_parent_pkg_idx = 1 AND [parent_pkg_idx] IS NULL) OR ([parent_pkg_idx] = @Original_parent_pkg_idx)) AND ((@IsNull_payed = 1 AND [payed] IS NULL) OR ([payed] = @Original_payed)))";
            this._adapter.DeleteCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_idx", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "idx", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_item_type_idx", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "item_type_idx", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_sold_at", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "sold_at", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_expires_at", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "expires_at", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_use_count", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "use_count", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_use_count", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "use_count", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_sold_count", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "sold_count", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_sold_count", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "sold_count", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_owner", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "owner", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_owner", System.Data.SqlDbType.UniqueIdentifier, 0, System.Data.ParameterDirection.Input, 0, 0, "owner", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_type", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "type", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_type", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "type", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_parent", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "parent", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_parent", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "parent", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_name", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "name", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "name", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_parent_pkg_idx", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "parent_pkg_idx", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_parent_pkg_idx", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "parent_pkg_idx", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_payed", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "payed", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_payed", System.Data.SqlDbType.Money, 0, System.Data.ParameterDirection.Input, 0, 0, "payed", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [shop_sold_item] ([item_type_idx], [sold_at], [expires_at], [use_count], [sold_count], [owner], [type], [parent], [name], [parent_pkg_idx], [payed]) VALUES (@item_type_idx, @sold_at, @expires_at, @use_count, @sold_count, @owner, @type, @parent, @name, @parent_pkg_idx, @payed);
SELECT idx, item_type_idx, sold_at, expires_at, use_count, sold_count, owner, type, parent, name, parent_pkg_idx, payed FROM shop_sold_item WHERE (idx = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@item_type_idx", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "item_type_idx", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@sold_at", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "sold_at", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@expires_at", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "expires_at", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@use_count", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "use_count", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@sold_count", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "sold_count", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@owner", System.Data.SqlDbType.UniqueIdentifier, 0, System.Data.ParameterDirection.Input, 0, 0, "owner", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@type", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "type", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@parent", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "parent", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "name", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@parent_pkg_idx", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "parent_pkg_idx", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@payed", System.Data.SqlDbType.Money, 0, System.Data.ParameterDirection.Input, 0, 0, "payed", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [shop_sold_item] SET [item_type_idx] = @item_type_idx, [sold_at] = @sold_at, [expires_at] = @expires_at, [use_count] = @use_count, [sold_count] = @sold_count, [owner] = @owner, [type] = @type, [parent] = @parent, [name] = @name, [parent_pkg_idx] = @parent_pkg_idx, [payed] = @payed WHERE (([idx] = @Original_idx) AND ([item_type_idx] = @Original_item_type_idx) AND ([sold_at] = @Original_sold_at) AND ([expires_at] = @Original_expires_at) AND ((@IsNull_use_count = 1 AND [use_count] IS NULL) OR ([use_count] = @Original_use_count)) AND ((@IsNull_sold_count = 1 AND [sold_count] IS NULL) OR ([sold_count] = @Original_sold_count)) AND ((@IsNull_owner = 1 AND [owner] IS NULL) OR ([owner] = @Original_owner)) AND ((@IsNull_type = 1 AND [type] IS NULL) OR ([type] = @Original_type)) AND ((@IsNull_parent = 1 AND [parent] IS NULL) OR ([parent] = @Original_parent)) AND ((@IsNull_name = 1 AND [name] IS NULL) OR ([name] = @Original_name)) AND ((@IsNull_parent_pkg_idx = 1 AND [parent_pkg_idx] IS NULL) OR ([parent_pkg_idx] = @Original_parent_pkg_idx)) AND ((@IsNull_payed = 1 AND [payed] IS NULL) OR ([payed] = @Original_payed)));
SELECT idx, item_type_idx, sold_at, expires_at, use_count, sold_count, owner, type, parent, name, parent_pkg_idx, payed FROM shop_sold_item WHERE (idx = @idx)";
            this._adapter.UpdateCommand.CommandType = System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@item_type_idx", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "item_type_idx", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@sold_at", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "sold_at", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@expires_at", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "expires_at", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@use_count", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "use_count", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@sold_count", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "sold_count", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@owner", System.Data.SqlDbType.UniqueIdentifier, 0, System.Data.ParameterDirection.Input, 0, 0, "owner", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@type", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "type", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@parent", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "parent", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "name", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@parent_pkg_idx", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "parent_pkg_idx", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@payed", System.Data.SqlDbType.Money, 0, System.Data.ParameterDirection.Input, 0, 0, "payed", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_idx", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "idx", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_item_type_idx", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "item_type_idx", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_sold_at", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "sold_at", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_expires_at", System.Data.SqlDbType.DateTime, 0, System.Data.ParameterDirection.Input, 0, 0, "expires_at", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_use_count", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "use_count", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_use_count", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "use_count", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_sold_count", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "sold_count", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_sold_count", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "sold_count", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_owner", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "owner", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_owner", System.Data.SqlDbType.UniqueIdentifier, 0, System.Data.ParameterDirection.Input, 0, 0, "owner", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_type", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "type", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_type", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "type", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_parent", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "parent", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_parent", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "parent", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_name", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "name", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_name", System.Data.SqlDbType.VarChar, 0, System.Data.ParameterDirection.Input, 0, 0, "name", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_parent_pkg_idx", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "parent_pkg_idx", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_parent_pkg_idx", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "parent_pkg_idx", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@IsNull_payed", System.Data.SqlDbType.Int, 0, System.Data.ParameterDirection.Input, 0, 0, "payed", System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@Original_payed", System.Data.SqlDbType.Money, 0, System.Data.ParameterDirection.Input, 0, 0, "payed", System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new System.Data.SqlClient.SqlParameter("@idx", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "idx", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::Shop.Properties.Settings.Default.GmatClubChallengeConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[3];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     idx, item_type_idx, sold_at, expires_at, use_count, sold_count, owner," +
                " type, parent, name, parent_pkg_idx, payed\r\nFROM         shop_sold_item";
            this._commandCollection[0].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[1].Connection = new System.Data.SqlClient.SqlConnection("Data Source=.\\SQLEXPRESS;AttachDbFilename=C:\\savis\\dc_db_work\\GmatClubTest_Data.M" +
                    "DF;Integrated Security=True;Connect Timeout=30;User Instance=True");
            this._commandCollection[1].CommandText = "SELECT expires_at, idx, item_type_idx, name, owner, parent, parent_pkg_idx, sold_" +
                "at, sold_count, type, use_count FROM shop_sold_item WHERE (item_type_idx = @itt)" +
                " AND (type = @type) AND (owner = @owner) ORDER BY idx DESC";
            this._commandCollection[1].CommandType = System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new System.Data.SqlClient.SqlParameter("@itt", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "item_type_idx", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new System.Data.SqlClient.SqlParameter("@type", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 0, 0, "type", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[1].Parameters.Add(new System.Data.SqlClient.SqlParameter("@owner", System.Data.SqlDbType.UniqueIdentifier, 16, System.Data.ParameterDirection.Input, 0, 0, "owner", System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[2] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[2].Connection = new System.Data.SqlClient.SqlConnection("Data Source=.\\SQLEXPRESS;AttachDbFilename=C:\\savis\\dc_db_work\\GmatClubTest_Data.M" +
                    "DF;Integrated Security=True;Connect Timeout=30;User Instance=True");
            this._commandCollection[2].CommandText = "SELECT expires_at, idx, item_type_idx, name, owner, parent, parent_pkg_idx, sold_" +
                "at, sold_count, type, use_count FROM shop_sold_item WHERE (owner = @owner) ORDER" +
                " BY sold_at";
            this._commandCollection[2].CommandType = System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new System.Data.SqlClient.SqlParameter("@owner", System.Data.SqlDbType.UniqueIdentifier, 16, System.Data.ParameterDirection.Input, 0, 0, "owner", System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(shop_sold_item.shop_sold_itemDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual shop_sold_item.shop_sold_itemDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            shop_sold_item.shop_sold_itemDataTable dataTable = new shop_sold_item.shop_sold_itemDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByItt(shop_sold_item.shop_sold_itemDataTable dataTable, int itt, System.Nullable<int> type, System.Nullable<System.Guid> owner) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(itt));
            if ((type.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(type.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((owner.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.Guid)(owner.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual shop_sold_item.shop_sold_itemDataTable GetByItt(int itt, System.Nullable<int> type, System.Nullable<System.Guid> owner) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(itt));
            if ((type.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(type.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((owner.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.Guid)(owner.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = System.DBNull.Value;
            }
            shop_sold_item.shop_sold_itemDataTable dataTable = new shop_sold_item.shop_sold_itemDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByOwner(shop_sold_item.shop_sold_itemDataTable dataTable, System.Nullable<System.Guid> owner) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((owner.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.Guid)(owner.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual shop_sold_item.shop_sold_itemDataTable GetDataByOwner(System.Nullable<System.Guid> owner) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((owner.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.Guid)(owner.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = System.DBNull.Value;
            }
            shop_sold_item.shop_sold_itemDataTable dataTable = new shop_sold_item.shop_sold_itemDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(shop_sold_item.shop_sold_itemDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(shop_sold_item dataSet) {
            return this.Adapter.Update(dataSet, "shop_sold_item");
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow dataRow) {
            return this.Adapter.Update(new System.Data.DataRow[] {
                        dataRow});
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_idx, int Original_item_type_idx, System.DateTime Original_sold_at, System.DateTime Original_expires_at, System.Nullable<int> Original_use_count, System.Nullable<int> Original_sold_count, System.Nullable<System.Guid> Original_owner, System.Nullable<int> Original_type, System.Nullable<int> Original_parent, string Original_name, System.Nullable<int> Original_parent_pkg_idx, System.Nullable<decimal> Original_payed) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_idx));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_item_type_idx));
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_sold_at));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_expires_at));
            if ((Original_use_count.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_use_count.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((Original_sold_count.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(Original_sold_count.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = System.DBNull.Value;
            }
            if ((Original_owner.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((System.Guid)(Original_owner.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = System.DBNull.Value;
            }
            if ((Original_type.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((int)(Original_type.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = System.DBNull.Value;
            }
            if ((Original_parent.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((int)(Original_parent.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = System.DBNull.Value;
            }
            if ((Original_name == null)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_name));
            }
            if ((Original_parent_pkg_idx.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((int)(Original_parent_pkg_idx.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = System.DBNull.Value;
            }
            if ((Original_payed.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((decimal)(Original_payed.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int item_type_idx, System.DateTime sold_at, System.DateTime expires_at, System.Nullable<int> use_count, System.Nullable<int> sold_count, System.Nullable<System.Guid> owner, System.Nullable<int> type, System.Nullable<int> parent, string name, System.Nullable<int> parent_pkg_idx, System.Nullable<decimal> payed) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(item_type_idx));
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(sold_at));
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(expires_at));
            if ((use_count.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(use_count.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((sold_count.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((int)(sold_count.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((owner.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((System.Guid)(owner.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((type.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(type.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((parent.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((int)(parent.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = System.DBNull.Value;
            }
            if ((name == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(name));
            }
            if ((parent_pkg_idx.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((int)(parent_pkg_idx.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = System.DBNull.Value;
            }
            if ((payed.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(payed.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = System.DBNull.Value;
            }
            System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int item_type_idx, 
                    System.DateTime sold_at, 
                    System.DateTime expires_at, 
                    System.Nullable<int> use_count, 
                    System.Nullable<int> sold_count, 
                    System.Nullable<System.Guid> owner, 
                    System.Nullable<int> type, 
                    System.Nullable<int> parent, 
                    string name, 
                    System.Nullable<int> parent_pkg_idx, 
                    System.Nullable<decimal> payed, 
                    int Original_idx, 
                    int Original_item_type_idx, 
                    System.DateTime Original_sold_at, 
                    System.DateTime Original_expires_at, 
                    System.Nullable<int> Original_use_count, 
                    System.Nullable<int> Original_sold_count, 
                    System.Nullable<System.Guid> Original_owner, 
                    System.Nullable<int> Original_type, 
                    System.Nullable<int> Original_parent, 
                    string Original_name, 
                    System.Nullable<int> Original_parent_pkg_idx, 
                    System.Nullable<decimal> Original_payed, 
                    int idx) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(item_type_idx));
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(sold_at));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(expires_at));
            if ((use_count.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(use_count.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((sold_count.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(sold_count.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = System.DBNull.Value;
            }
            if ((owner.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((System.Guid)(owner.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = System.DBNull.Value;
            }
            if ((type.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(type.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = System.DBNull.Value;
            }
            if ((parent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(parent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = System.DBNull.Value;
            }
            if ((name == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(name));
            }
            if ((parent_pkg_idx.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(parent_pkg_idx.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = System.DBNull.Value;
            }
            if ((payed.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(payed.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_idx));
            this.Adapter.UpdateCommand.Parameters[12].Value = ((int)(Original_item_type_idx));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(Original_sold_at));
            this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(Original_expires_at));
            if ((Original_use_count.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((int)(Original_use_count.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = System.DBNull.Value;
            }
            if ((Original_sold_count.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(Original_sold_count.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = System.DBNull.Value;
            }
            if ((Original_owner.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((System.Guid)(Original_owner.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = System.DBNull.Value;
            }
            if ((Original_type.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((int)(Original_type.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = System.DBNull.Value;
            }
            if ((Original_parent.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((int)(Original_parent.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = System.DBNull.Value;
            }
            if ((Original_name == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_name));
            }
            if ((Original_parent_pkg_idx.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((int)(Original_parent_pkg_idx.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = System.DBNull.Value;
            }
            if ((Original_payed.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((decimal)(Original_payed.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[31].Value = ((int)(idx));
            System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & System.Data.ConnectionState.Open) 
                        != System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
    }
}

#pragma warning restore 1591